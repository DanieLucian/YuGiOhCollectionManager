<Window
    x:Class="WpfDesktopUI.Views.InsertMenuView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:helper="clr-namespace:WpfDesktopUI.Helpers"
    xmlns:viewmodels="clr-namespace:WpfDesktopUI.ViewModels"
    Width="auto"
    Height="auto"
    WindowStartupLocation="CenterOwner"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance Type=viewmodels:InsertMenuViewModel}"
    Title="InsertMenuView">

    <Window.Resources>

        <helper:QuantityToColorConverter x:Key="QuantityConverter"/>

        <Style
            x:Key="CellTextBox"
            TargetType="{x:Type TextBox}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Margin" Value="2 5 5 5" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="SelectionTextBrush" Value="White" />
            <Setter Property="SelectionBrush" Value="Transparent" />
            <Setter Property="Cursor" Value="Arrow" />
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="true">
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="EnableColumnVirtualization" Value="True"/>
            <Setter Property="EnableRowVirtualization" Value="True"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="SelectionMode" Value="Extended"/>
            <Setter Property="SelectionUnit" Value="Cell"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="RowBackground" Value="{Binding Quantity, Converter={StaticResource QuantityConverter}}"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <StackPanel
            Orientation="Horizontal">
            <ComboBox
                MinWidth="200"
                Margin="5"
                FontSize="15"
                FontWeight="Bold"
                Padding="5"
                ItemsSource="{Binding Sets}"
                SelectedItem="{Binding SelectedSet, Mode=OneWayToSource}"
                IsTextSearchCaseSensitive="False">
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True" />
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
            </ComboBox>

            <Button
                x:Name="InsertCards"
                MinWidth="200"
                Margin="5"
                FontSize="15"
                FontWeight="Bold"
                BorderThickness="3"
                Padding="5"
                Content="Insert" />
        </StackPanel>

        
        
        <DataGrid
            Grid.Row="1"
            Grid.ColumnSpan="2"
            ItemsSource="{Binding CardsFromSet, Mode=OneWay}"
            Style="{DynamicResource DataGridStyle}">
            <DataGrid.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" MappingMode="Absolute">
                    <LinearGradientBrush.RelativeTransform>
                        <TransformGroup>
                            <RotateTransform Angle="45" CenterY="0.5" CenterX="0.5" />
                        </TransformGroup>
                    </LinearGradientBrush.RelativeTransform>
                    <GradientStop Offset="1" Color="#FFC3D2E0" />
                    <GradientStop Offset="0" Color="#FFECF5FD" />
                </LinearGradientBrush>
            </DataGrid.Background>
            <DataGrid.Columns>
                <DataGridTemplateColumn
                    Width="20*"
                    SortMemberPath="SetCode"
                    IsReadOnly="True"
                    Header="Set Code">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox
                                Style="{DynamicResource CellTextBox}"
                                Text="{Binding SetCode}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn
                    Width="auto"
                    SortMemberPath="CardName"
                    IsReadOnly="True"
                    Header="Card Name">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox
                                Style="{DynamicResource CellTextBox}"
                                Text="{Binding CardName}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn
                    Width="10*"
                    SortMemberPath="RarityCode"
                    IsReadOnly="True"
                    Header="Rarity">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox
                                Style="{DynamicResource CellTextBox}"
                                ToolTip="{Binding RarityName}"
                                Text="{Binding RarityCode}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn
                    Width="50*"
                    SortMemberPath="Quantity"
                    Header="Quantity">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <toolkit:IntegerUpDown
                                Margin="5"
                                HorizontalAlignment="Left"
                                Value="{Binding Quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                AllowTextInput="False"
                                BorderThickness="2"
                                MouseWheelActiveTrigger="MouseOver" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>